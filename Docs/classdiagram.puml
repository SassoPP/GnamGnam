@startuml
class UserPageController #red {
  - userImage: UriImageSource
  + UserPageController()
  + Appearing(): Task
  + ChangePassword(): Task
  + ChangeImage(): Task
}
class CercaPageController #red {
  - cercaRicetta: bool
  - cercaIngrediente: bool
  - contenutoEntry: string
  + Listaingredienti: ObservableCollection<Ingrediente>
  + ListaRicette: ObservableCollection<RicettaFoto>
  + Ricerca(): Task
}
class IngredienteC #red {
 + IngredienteId: int
 + Nome: string
 + Descrizione: string
 + DataInizio: DateTime
 + DataFine: DateTime
}
    enum TipoPiatto {
        Primo,
        Secondo,
        Dolce,
        Bevanda,
        Antipasto,
        Snack,
        Drink,
        Contorno
    }

    class RicettaC #red{
        + RicettaId: int
        + UtenteId: int
        + Nome: string
        + Preparazione: string
        + Tempo: int?
        + Difficolta: int?
        + DataAggiunta: DateTime
        + Piatto: int
    }

class RicettaFotoC #red {
        + RicettaId: int
        + UtenteId: int
        + Nome: string
        + Preparazione: string
        + Tempo: int?
        + Difficolta: int?
        + DataAggiunta: DateTime
        + Piatto: TipoPiatto
        + URLFoto: string
        + URLFotoUtente: string
        + RicettaFoto(ricetta: Ricetta, foto: string, fotoUtente: string)
        + RicettaFoto()
    }
class UtenteC #red {
        + UtenteId: int
        + Username: string
        + Password: string
        + Utente()
    }
class FotoC #red {
        + FotoId: int
        + Descrizione: string
        + FotoData: string
        + RicettaId: int?
    }


class FotoUtenteC #red {
        + FotoId: int
        + FotoData: string
        + UtenteId: int?
    }









class AddPageController #red {
        -nomeRicetta: string
        -preparazione: string
        -tempo: int
        -difficoltà: int
        -tipiPiatti: ObservableCollection<TipoPiatto>
        -tipoPiattoSel: int
        -base64Images: List<string>
        -contenutoEntry: string
        -Listaingredienti: ObservableCollection<Ingrediente>

        +Ricerca(): Task
        +SaveRecipe(): Task
        +ImpostaImmagine(): Task
    }
class DetailsPageController #red {
  - ricetta: RicettaFoto
  + DetailsPageController(ricetta: RicettaFoto)
}
class ElementiSalvatiController #red {
        - ListaSalvati: ObservableCollection<RicettaFoto>
        + Appearing(): Task
        + RichiestaHttp(): Task
        + Save(ricettaId: int): Task
        + OpenDescription(ricetta: RicettaFoto): Task
    }
class HomePageController #red {
  -ListaNovità: ObservableCollection<RicettaFoto>
  -RicettaDelGiorno: ObservableCollection<RicettaFoto>
  -listRicette: List<Ricetta>
  -listFoto: List<Foto>
  -endpoint: string
  -indicePartenza: int
  -countRicette: int
  -apiUrl: string
  +Appearing(): Task
  +RichiestaHttp(): Task
  +RichiestaHttpGiorno(): Task
  +AggiornaNovità(): Task
  +OpenDescription(RicettaFoto): Task
  +Save(int): Task
}
class MainPageController #red {
  
 - tst: string
 + MainPageController()
}

class LoginPageController #red {
  -salvaCredenziali: bool
  -creaUtente: bool
  -viewUsername: string
  -viewPassword: string
  -message: string
  -username: string
  -password: string
  +ViewUsername: string
  +ViewPassword: string
  +SalvaCredenziali: bool
  +CreaUtente: bool
  +Message: string
  +Login(): Task
  +RichiestaHttpLogin(): Task
  +TestPreference(): Task
}


class Foto #green{
  + FotoId : int
  + Descrizione: string
  + FotoData: byte[]
  + RicettaID: int
  + Ricetta: Ricetta
}
class FotoUtente #green{
  + FotoId : int
  + FotoData : byte[]
  + UtenteId : int
  + Utente : Utente
}
class FotoUtenteDTO #green{
  + FotoId : int
  + FotoData : byte[]
  + UtenteId : int
  + FotoUtenteDTO()
  + FotoUtenteDTO(FotoUtente foto)
}
class FotoDTO #green{
  + FotoId : int
  + Descrizione: string
  + FotoData: byte[]
  + RicettaID: int
  + FotoDTO(Foto foto)
  + FotoDTO()
}
class Ingrediente #green{
  + IngredienteId : int
  + Nome: string
  + Descrizione: string
  + DataInizio: DateTime
  + DataFine: DateTime
  + RicettaIngredienti: ICollection<RicettaIngrediente>
}
class IngredienteDTO #green{
  + IngredienteId : int
  + Nome: string
  + Descrizione: string
  + DataInizio: DateTime
  + DataFine: DateTime
  + IngredienteDTO(Ingrediente ingrediente)
  + IngredienteDTO()
}
class Ricetta #green{
  + RicettaId : int
  + UtenteId: int
  + Nome: string
  + Preparazione: string
  + Tempo: int
  + Difficolta: int
  + Piatto: int
  + DataAggiunta: DateTime
  + Utente: Utente
  + Fotos: ICollection<Foto>
  + RicettaIngredienti: ICollection<RicettaIngrediente>
  + UtenteRicetteSalvate: ICollection<UtenteRicettaSalvata>
}
class RicettaDTO #green{
  + RicettaId : int
  + UtenteId: int
  + Nome: string
  + Preparazione: string
  + Tempo: int
  + Difficolta: int
  + DataAggiunta: DateTime
  + TipoPiatto: Piatto
  + RicettaDTO(Ricetta ricetta)
  + RicettaDTO()
}
class RicettaIngrediente #green{
  + RicettaId: int
  + Ricetta: Ricetta
  + IngredienteId: int
  + Ingrediente: Ingrediente
}
class Utente #green{
  + UtenteId: int
  + Username: string
  + Ricetta: ICollection<Ricetta>
  + UtenteRicetteSalvate: ICollection<UtenteRicettaSalvata>
  + UtenteUtentiSeguiti: ICollection<UtenteUtenteSeguito>
  + UtenteUtentiChetiSeguono: ICollection<UtenteUtenteSeguito>
}
class UtenteDTO #green{
  + UtenteId: int
  + Username: string
  + UtenteDTO()
  + UtenteDTO(Utente utente)
}
class UtenteRicettaSalvata #green{
  + UtenteId: int
  + Utente: Utente 
  + RicettaId: int
  + Ricetta: Ricetta
}
class UtenteUtenteSeguito #green{
  + UtenteId: int
  + Utente: Utente 
  + UtenteSeguitoId: int
  + UtenteSeguito: Utente
}
Ricetta --|> Utente
FotoUtente --|> Utente
Foto --|> Ricetta : Contiene
RicettaIngrediente --|> Ricetta : Associa
RicettaIngrediente --|> Ingrediente : Contiene
UtenteRicettaSalvata --|> Utente : Salva
UtenteRicettaSalvata --|> Ricetta
UtenteUtenteSeguito --|> Utente : Segue
UtenteUtenteSeguito --|> Utente : Viene Seguito
Foto -- FotoDTO
Utente -- UtenteDTO
Ingrediente -- IngredienteDTO
Ricetta -- RicettaDTO
FotoUtente -- FotoUtenteDTO
AddPageController -- IngredienteC
RicettaC -- TipoPiatto
RicettaFotoC -- RicettaC
AddPageController -- TipoPiatto
AddPageController -- RicettaC
CercaPageController -- IngredienteC
CercaPageController -- RicettaFotoC
CercaPageController -- RicettaC
DetailsPageController -- IngredienteC
DetailsPageController -- RicettaFotoC
ElementiSalvatiController -- RicettaFotoC
ElementiSalvatiController -- RicettaC
HomePageController -- RicettaFotoC
HomePageController -- RicettaC
HomePageController -- FotoC
LoginPageController -- UtenteC
UserPageController -- UtenteC
UserPageController -- FotoUtenteC
@enduml